- name: Create a sandbox instance
  hosts: localhost
  gather_facts: False
  vars:
    instance_type: t3.micro
    security_group_id: sg-03dc99c7c771a43f0
    image: ami-0b55b2bdf150da270
    region: us-east-1
  tasks:
    - name: Launch instance
      amazon.aws.ec2_instance:
        count: 1
        security_group : "{{ security_group_id }}"
        instance_type: "{{ instance_type }}"
        image:
          id: "{{ image }}"
        wait: true
        region: "{{ region }}"
        vpc_subnet_id: subnet-0d493668
        state: running
        network:
          assign_public_ip: yes
        tags:
          Name: Check-Instance
      register: ec2

#    - name: Get EC2.INSTANCES information
#      debug:
#        msg: "{{ ec2.instances }}"

    - name: Add new instance to host group
      add_host:
        name: "{{ item.public_ip_address }}"
        groups: launched
      loop: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      wait_for_connection:
        delay: 15
        timeout: 40

    - name: Set Instance_Id variable to pass to next plan.
      set_fact:
        Instance_Id: "{{ ec2.instance_ids }}"

- name: Execute role fail but task to continue.
  hosts: launched
  become: True
  gather_facts: Yes
  tasks:
    - name: set the facts per host
      set_fact:
        INSTANCE_ID: "{{ hostvars['localhost']['Instance_Id'] }}"

    - name: New play to execute role to test
      block:
        - name: Import a test role
          ansible.builtin.import_role:
            name: "{{ role_name }}"
#         ignore_errors: True

      always:
        - name: Terminate instances that were previously launched
          delegate_to: 127.0.0.1
          amazon.aws.ec2_instance:
            state: absent
            instance_ids: "{{ INSTANCE_ID }}"
            region: us-east-1